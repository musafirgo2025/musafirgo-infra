name: 🏗️ Deploy Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'dev/**'
      - 'scripts/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'dev/**'
      - 'scripts/**'
      - '.github/workflows/infrastructure.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  RESOURCE_GROUP: musafirgo-${{ github.event.inputs.environment || 'dev' }}-rg
  LOCATION: westeurope

jobs:
  validate-infrastructure:
    name: 🔍 Validate Infrastructure
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: 🔨 Validate Bicep Template
        run: |
          cd dev/iac
          az deployment group validate \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file aca-dev.bicep \
            --parameters @aca-dev.parameters.json \
            --parameters containerImage="test-image:latest"

      - name: 📊 Generate Validation Report
        run: |
          echo "## 🔍 Infrastructure Validation Report" >> $GITHUB_STEP_SUMMARY
          echo "✅ Bicep template validation passed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Parameters validation passed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Resource group: ${{ env.RESOURCE_GROUP }}" >> $GITHUB_STEP_SUMMARY

  deploy-infrastructure:
    name: 🚀 Deploy Infrastructure
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    needs: [validate-infrastructure]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: 🏗️ Deploy Infrastructure
        run: |
          cd dev/iac
          
          # Create resource group if it doesn't exist
          az group create \
            --name ${{ env.RESOURCE_GROUP }} \
            --location ${{ env.LOCATION }} \
            --subscription ${{ env.AZURE_SUBSCRIPTION_ID }}
          
          # Deploy infrastructure
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file aca-dev.bicep \
            --parameters @aca-dev.parameters.json \
            --parameters containerImage="" \
            --name "infra-deploy-$(date +%Y%m%d-%H%M%S)"

      - name: 📊 Get Deployment Outputs
        id: outputs
        run: |
          cd dev/iac
          OUTPUTS=$(az deployment group show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name "infra-deploy-$(date +%Y%m%d-%H%M%S)" \
            --query properties.outputs -o json)
          
          echo "containerAppFqdn=$(echo $OUTPUTS | jq -r '.containerAppFqdn.value')" >> $GITHUB_OUTPUT
          echo "acrLoginServer=$(echo $OUTPUTS | jq -r '.acrLoginServer.value')" >> $GITHUB_OUTPUT
          echo "apimGatewayUrl=$(echo $OUTPUTS | jq -r '.apimGatewayUrl.value')" >> $GITHUB_OUTPUT

      - name: 📋 Generate Deployment Report
        run: |
          echo "## 🚀 Infrastructure Deployment Report" >> $GITHUB_STEP_SUMMARY
          echo "✅ Infrastructure deployed successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Deployment Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Resource Group**: ${{ env.RESOURCE_GROUP }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Location**: ${{ env.LOCATION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Container App FQDN**: ${{ steps.outputs.outputs.containerAppFqdn }}" >> $GITHUB_STEP_SUMMARY
          echo "- **ACR Login Server**: ${{ steps.outputs.outputs.acrLoginServer }}" >> $GITHUB_STEP_SUMMARY
          echo "- **APIM Gateway URL**: ${{ steps.outputs.outputs.apimGatewayUrl }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Access Points" >> $GITHUB_STEP_SUMMARY
          echo "- **Container App**: https://${{ steps.outputs.outputs.containerAppFqdn }}" >> $GITHUB_STEP_SUMMARY
          echo "- **APIM Gateway**: ${{ steps.outputs.outputs.apimGatewayUrl }}" >> $GITHUB_STEP_SUMMARY
          echo "- **API Endpoint**: ${{ steps.outputs.outputs.apimGatewayUrl }}/api/itinerary" >> $GITHUB_STEP_SUMMARY

  test-deployment:
    name: 🧪 Test Deployment
    runs-on: ubuntu-latest
    needs: [deploy-infrastructure]
    if: always() && needs.deploy-infrastructure.result == 'success'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: 🧪 Test Container App Health
        run: |
          # Wait for container app to be ready
          sleep 30
          
          # Test health endpoint
          CONTAINER_APP_FQDN=$(az deployment group show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name "infra-deploy-$(date +%Y%m%d-%H%M%S)" \
            --query properties.outputs.containerAppFqdn.value -o tsv)
          
          if curl -f "https://$CONTAINER_APP_FQDN/actuator/health"; then
            echo "✅ Container App health check passed"
          else
            echo "❌ Container App health check failed"
            exit 1
          fi

      - name: 🧪 Test APIM Gateway
        run: |
          APIM_GATEWAY_URL=$(az deployment group show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name "infra-deploy-$(date +%Y%m%d-%H%M%S)" \
            --query properties.outputs.apimGatewayUrl.value -o tsv)
          
          if curl -f "$APIM_GATEWAY_URL/api/itinerary"; then
            echo "✅ APIM Gateway test passed"
          else
            echo "❌ APIM Gateway test failed"
            exit 1
          fi

      - name: 📊 Generate Test Report
        run: |
          echo "## 🧪 Deployment Test Report" >> $GITHUB_STEP_SUMMARY
          echo "✅ All deployment tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- Container App health check: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- APIM Gateway connectivity: ✅" >> $GITHUB_STEP_SUMMARY

