version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15.6
    container_name: musafirgo-itinerary-postgres
    environment:
      POSTGRES_DB: itinerarydb
      POSTGRES_USER: itinerary
      POSTGRES_PASSWORD: itinerary
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U itinerary -d itinerarydb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - musafirgo_local
    restart: unless-stopped

  # Service Itinerary (Java Spring Boot)
  itinerary-service:
    image: musafirgo-itinerary-service:local
    container_name: musafirgo-itinerary-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Profil Spring
      SPRING_PROFILES_ACTIVE: dev
      
      # Configuration base de données
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/itinerarydb
      SPRING_DATASOURCE_USERNAME: itinerary
      SPRING_DATASOURCE_PASSWORD: itinerary
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      
      # Configuration JPA/Hibernate
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
      
      # Configuration serveur
      SERVER_PORT: 8080
      SERVER_SERVLET_CONTEXT_PATH: /
      
      # Configuration JVM
      JAVA_OPTS: "-XX:+UseG1GC -XX:MaxRAMPercentage=75 -Duser.timezone=UTC"
      
      # Configuration logging
      LOGGING_LEVEL_COM_MUSAFIRGO: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: DEBUG
      
      # Configuration Actuator
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics,prometheus
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - musafirgo_local
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Service de monitoring (optionnel)
  adminer:
    image: adminer:latest
    container_name: musafirgo-adminer
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
    ports:
      - "8081:8080"
    networks:
      - musafirgo_local
    restart: unless-stopped
    profiles:
      - tools

volumes:
  pgdata:
    driver: local

networks:
  musafirgo_local:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
