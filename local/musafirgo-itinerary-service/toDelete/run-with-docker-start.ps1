# Script pour ex√©cuter la pipeline avec d√©marrage automatique de Docker
Write-Host "=== MusafirGO Pipeline avec D√©marrage Auto Docker ===" -ForegroundColor Cyan

# V√©rifier si Docker est en cours d'ex√©cution
Write-Host "üîç V√©rification du statut Docker..." -ForegroundColor Yellow
$dockerInfo = docker info 2>$null
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ö†Ô∏è  Docker n'est pas en cours d'ex√©cution" -ForegroundColor Yellow
    Write-Host "üöÄ Tentative de d√©marrage de Docker Desktop..." -ForegroundColor Yellow
    
    # D√©marrer Docker Desktop
    Start-Process "Docker Desktop" -ErrorAction SilentlyContinue
    Write-Host "üì± Commande de lancement Docker Desktop envoy√©e" -ForegroundColor Green
    
    # Attendre que Docker soit pr√™t
    Write-Host "‚è≥ Attente du d√©marrage de Docker..." -ForegroundColor Yellow
    $maxAttempts = 30
    $attempt = 0
    
    do {
        $attempt++
        Start-Sleep -Seconds 2
        
        $dockerInfo = docker info 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Docker d√©marr√© avec succ√®s apr√®s $($attempt * 2) secondes!" -ForegroundColor Green
            break
        }
        
        Write-Host "‚è≥ Attente en cours... ($attempt/$maxAttempts)" -ForegroundColor Yellow
    } while ($attempt -lt $maxAttempts)
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Docker n'a pas d√©marr√© dans les $($maxAttempts * 2) secondes" -ForegroundColor Red
        Write-Host "üí° Veuillez d√©marrer Docker Desktop manuellement et r√©essayer" -ForegroundColor Yellow
        exit 1
    }
} else {
    Write-Host "‚úÖ Docker est d√©j√† en cours d'ex√©cution" -ForegroundColor Green
}

# Maintenant ex√©cuter la pipeline
Write-Host "üöÄ Ex√©cution de la pipeline MusafirGO..." -ForegroundColor Cyan
Write-Host ""

# Ex√©cuter la pipeline
& ".\pipeline.exe"

Write-Host ""
Write-Host "‚úÖ Pipeline ex√©cut√©e avec succ√®s!" -ForegroundColor Green